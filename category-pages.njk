---
layout: base.njk
pagination:
    data: categories
    size: 1
    alias: category
permalink: "{{ category.slug}}/"
relative_prefix: ".."
---
<div class="tool">
    <nav id="navbar">
        <div id="navbar-logo">
            <a href="https://www.browndailyherald.com">
                <img id="navbar-logo-img" src="logo-black.png"/>
            </a>
        </div>
        <ul id="nav-options">
            {%- for currCategory in categories -%}
                <a
                    {% if category.name === currCategory.name %}
                        class="nav-option active"
                    {% else %}
                        class="nav-option"
                    {% endif %}
                    href="../{{currCategory.slug}}"
                >
                    <li>{{ currCategory.name }}</li>
                </a>
            {%- endfor -%}
        </ul>
        <div id="nav-links">
            <a id="about-link" href="../about">About</a>
            <a id="story-link" href="https://www.browndailyherald.com/article/2023/03/the-heralds-spring-2023-poll">
                <div>Read the story</div>
                <img src="../assets/white-arrow.svg" />
            </a>
        </div>
    </nav>
    <section class="section-wrapper"> 

        <div class="question-categories-wrapper">
            <div class="question-categories">
                {%- for question in category.questions -%}
                    <button data-target="{{ question.slug }}" id='{{ question.slug }}'>{{ question.name }}</button>
                {%- endfor -%}
            </div>
        </div>
        <div class="main-content-wrapper">
            <div class="question-text">
                {%- for question in category.questions -%}
                    <div class="question-{{ question.slug }}-text" style="display: none;">
                        <h1>{{ question.text }}</h1>
                    </div>
                {%- endfor -%}
            </div>
            <div class="subdiv-graph-wrapper">
                <div class="question-subdivisions">
                    {%- for question in category.questions -%}
                        <div class="question-{{ question.slug }}-subdivisions" style="display: none;">
                        <h2 id="breakdown-header">Breakdown</h2>
                            {%- for subdivision in question.broken_down_by -%}
                                <button id="{{ subdivision.slug }}">{{ subdivision.name }}</button>
                            {% endfor %}
                        </div>
                    {% endfor %}
                </div>

                <div class="graphics">
                    {% for question in category.questions %}
                        {% for subdivision in question.broken_down_by %}
                            <div class="image-{{ question.slug }}-{{ subdivision.slug }}" style="display: none;">
                                <div class="flourish-embed flourish-chart" data-src="{{ subdivision.link }}"><script src="https://public.flourish.studio/resources/embed.js"></script></div>
                            </div>
                            <div class="blurb-{{ question.slug }}-{{ subdivision.slug }}" style="display: none;">
                                <!-- this assumes the blurb is written as a list of paragraphs -->
                                {% for paragraph in subdivision.blurb %}
                                    <p class="subdivision-blurbs">{{ paragraph | safe }}</p>
                                {% endfor %}
                            </div>
                        {% endfor %}
                    {% endfor %}
                </div>
            </div>
        </div>
        <footer><p>Copyright Â© 2023 The Brown Daily Herald, Inc.</p></footer>
    </section>
</div>
<script>
    const buttons = document.querySelectorAll('.question-categories button');
    let subButtons = document.querySelectorAll('.question-subdivisions button');
    const textSections = document.querySelectorAll('.question-text div');
    const subSections = document.querySelectorAll('.question-subdivisions div');
    const graphics = document.querySelectorAll('.graphics div')
    let selectedButton = buttons[0].id;
    let selectedSubButton = subButtons[0].id;
    window.onload = () => {
        const urlParams = new URLSearchParams(window.location.search);
        const questionParam = urlParams.get('question');
        const breakdownParam = urlParams.get('breakdown');
        if (questionParam && breakdownParam) {
            selectedButton = questionParam;
            selectedSubButton = breakdownParam;
        } else if (questionParam) {
            selectedButton = questionParam;
        } else {
            buttons[0].classList.add('selected');
            subButtons[0].classList.add('selected');
        }
        for (const button of buttons) {
            if (button.id === selectedButton) {
                button.classList.add('selected');
            }
        }
        for (const subButton of subButtons) {
            if (subButton.id === selectedSubButton) {
                subButton.classList.add('selected');
            }
        }
        for (const textSection of textSections) {
            if (textSection.classList.contains(`question-${selectedButton}-text`)) {
                textSection.style.display = 'block';
            }
        }
        for (const subSection of subSections) {
            if (subSection.classList.contains(`question-${selectedButton}-subdivisions`)) {
                subSection.style.display = 'flex';
            }
        }
        for (const graphic of graphics) {
            if (graphic.classList.contains(`image-${selectedButton}-${selectedSubButton}`)) {
                graphic.style.display = 'block';
            }
            if (graphic.classList.contains(`blurb-${selectedButton}-${selectedSubButton}`)) {
                graphic.style.display = 'block';
            }
        }
        addButtonsListener();
        addSubButtonsListener();
    };
    addButtonsListener = () => {
        buttons.forEach((button) => {
            button.addEventListener('click', () => {
                handleButtonClick(button)
            });
        });
    }
    addSubButtonsListener = () => {
            subButtons.forEach((button) => {
                button.addEventListener('click', () => {
                    handleSubButtonClick(button);
                });
            });
    }
    handleButtonClick = (button) => {
        selectedButton = button.id;
        buttons.forEach((b) => b.classList.remove('selected'));
        textSections.forEach((section) => section.style.display = 'none');
        subSections.forEach((section) => section.style.display = 'none');
        button.classList.add('selected');
        const target = button.dataset.target;
        document.querySelector(`.question-${target}-text`).style.display = 'block';
        document.querySelector(`.question-${target}-subdivisions`).style.display = 'flex';
        subButtons = document.querySelectorAll(`.question-${target}-subdivisions button`);
        subButtons.forEach((b) => b.classList.remove('selected'));
        subButtons[0].classList.add('selected');
        selectedSubButton = subButtons[0].id;
        updateImage()
    }
    handleSubButtonClick = (button) => {
        selectedSubButton = button.id;
        subButtons.forEach((b) => b.classList.remove('selected'));
        button.classList.add('selected');
        updateImage()
    }
    updateImage = () => {
        graphics.forEach((div) => {
            div.style.display = 'none'
        });
        selectedImage = document.querySelector(`.image-${selectedButton}-${selectedSubButton}`)
        selectedImage.style.display = 'block';

        selectedEmbed = selectedImage.getElementsByClassName("datawrapper-script-embed")[0]
        selectedEmbed.style.display = "block"
        document.querySelector(`.blurb-${selectedButton}-${selectedSubButton}`).style.display = 'block';
    }
</script>

{# <script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(e){if(void 0!==e.data["datawrapper-height"]){var t=document.querySelectorAll("iframe");for(var a in e.data["datawrapper-height"])for(var r=0;r<t.length;r++){if(t[r].contentWindow===e.source)t[r].style.height=e.data["datawrapper-height"][a]+"px"}}}))}();</script> #}